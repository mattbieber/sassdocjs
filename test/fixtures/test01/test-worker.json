{
    "buffer": [],
    "items": {
        "1": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.1",
            "typeName": "SassDoclet",
            "name": "fixtures/test01.scss",
            "kind": "module",
            "filename": "test01.scss",
            "lineno": 5,
            "expectedItemCount": 1,
            "description": "Test fixture for sassdocjs tests\n",
            "prefix": null,
            "raw": [
                "",
                "Test fixture for sassdocjs tests",
                "@module fixtures/test01.scss"
            ],
            "sass": [],
            "context": 1
        },
        "2": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.2",
            "typeName": "SassDoclet",
            "name": "icon-sprite",
            "kind": "var",
            "filename": "test01.scss",
            "lineno": 7,
            "expectedItemCount": 1,
            "description": "backround image path to sprite file",
            "prefix": null,
            "raw": [
                " @var {String} backround image path to sprite file "
            ],
            "sass": "$icon-sprite:                           url('/images/sprite.png') no-repeat;",
            "type": "String",
            "context": 1
        },
        "3": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.3",
            "typeName": "SassDoclet",
            "name": "sprite-count",
            "kind": "var",
            "filename": "test01.scss",
            "lineno": 10,
            "expectedItemCount": 1,
            "description": "number of sprites to expect in file",
            "prefix": null,
            "raw": [
                " @var {Number} number of sprites to expect in file "
            ],
            "sass": "$sprite-count:                          23;",
            "type": "Number",
            "context": 1
        },
        "4": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.4",
            "typeName": "SassDoclet",
            "name": "default-sprite",
            "kind": "var",
            "filename": "test01.scss",
            "lineno": 13,
            "expectedItemCount": 1,
            "description": "default sprite file to use",
            "prefix": null,
            "raw": [
                " @var {String} default sprite file to use "
            ],
            "sass": "$default-sprite:                        $icon-sprite;",
            "type": "String",
            "context": 1
        },
        "5": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.5",
            "typeName": "SassDoclet",
            "name": "default-sprite-element-width",
            "kind": "var",
            "filename": "test01.scss",
            "lineno": 16,
            "expectedItemCount": 1,
            "description": "with of sprited elements",
            "prefix": null,
            "raw": [
                " @var {Number} with of sprited elements "
            ],
            "sass": "$default-sprite-element-width:          $icon-sprite-element-width;",
            "type": "Number",
            "context": 1
        },
        "6": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.6",
            "typeName": "SassDoclet",
            "name": "default-sprite-element-height",
            "kind": "var",
            "filename": "test01.scss",
            "lineno": 19,
            "expectedItemCount": 1,
            "description": "height of sprited elements",
            "prefix": null,
            "raw": [
                " @var {Number} height of sprited elements "
            ],
            "sass": "$default-sprite-element-height:         $icon-sprite-element-height;",
            "type": "Number",
            "context": 1
        },
        "7": {
            "buffer": [],
            "items": [
                {
                    "id": 1,
                    "kind": "param",
                    "type": "String",
                    "name": "$item-position",
                    "description": "acceptable values are horizontal or vertical",
                    "src": "@param     $item-position {String} acceptable values are horizontal or vertical",
                    "paraminfo": {}
                },
                {
                    "id": 4,
                    "kind": "param",
                    "type": "Number",
                    "name": "$sprite-width",
                    "description": "optional if supplied this should be the number of total elements",
                    "src": "@param     $sprite-width {Number} optional if supplied this should be the number of total elements",
                    "paraminfo": {}
                },
                {
                    "id": 5,
                    "kind": "param",
                    "type": "Bool",
                    "name": "$sprite-height",
                    "description": "use float vs. inline-block",
                    "src": "@param     $sprite-height {Bool} use float vs. inline-block",
                    "paraminfo": {}
                },
                {
                    "id": 6,
                    "kind": "example",
                    "type": "",
                    "name": "",
                    "description": "background: sprite(24px, gray, mapicon);\n&:hover {\nbackground: sprite(24px, orange, mapicon);\n}\n",
                    "src": "@example",
                    "paraminfo": {}
                }
            ],
            "id": "test01.scss.7",
            "typeName": "SassDoclet",
            "name": "sprite",
            "kind": "mixin",
            "filename": "test01.scss",
            "lineno": 36,
            "expectedItemCount": 6,
            "description": "mixin for creating horizontal or vertical list of items\ne.g. floated DIV or LI elemenents for navigation or grouping\n",
            "prefix": null,
            "raw": [
                "",
                "mixin for creating horizontal or vertical list of items",
                "e.g. floated DIV or LI elemenents for navigation or grouping",
                "",
                "@param     $item-position {String} acceptable values are horizontal or vertical",
                "@param     $style-position {Number} margin to apply to right (horizontal) or bottom (vertical)",
                "@param     $image-file {Number} optional width",
                "@param     $sprite-width {Number} optional if supplied this should be the number of total elements",
                "@param     $sprite-height {Bool} use float vs. inline-block",
                "@example",
                "  background: sprite(24px, gray, mapicon);",
                "  &:hover {",
                "    background: sprite(24px, orange, mapicon);",
                "  }"
            ],
            "sass": "@mixin sprite($item-position: 0,\n              $style-position: 0,\n              $image-file: $default-sprite,\n              $sprite-width:  $default-sprite-element-width,\n              $sprite-height: $default-sprite-element-height)\n{\n  $pos-x: -1 * ($style-position * $sprite-width);\n  $pos-y: -1 * ($item-position * $sprite-height);\n\n  @debug $pos-x;\n  @debug $pos-y;\n\n  background: $image-file $pos-x $pos-y;\n\n}",
            "context": 0
        },
        "8": {
            "buffer": [],
            "items": [
                {
                    "id": 3,
                    "kind": "param",
                    "type": "String",
                    "name": "$background-image",
                    "description": "a background image url",
                    "src": "@param      $background-image {String} a background image url",
                    "paraminfo": {}
                },
                {
                    "id": 2,
                    "kind": "param",
                    "type": "String|Color",
                    "name": "$color",
                    "description": "a string or hex/rgba color value to use for the border",
                    "src": "@param      $color {String|Color} a string or hex/rgba color value to use for the border",
                    "paraminfo": {}
                },
                {
                    "id": 4,
                    "kind": "returns",
                    "type": "Style",
                    "name": "",
                    "description": "bordered left content",
                    "src": "@returns {Style} bordered left content",
                    "paraminfo": {}
                },
                {
                    "id": 5,
                    "kind": "example",
                    "type": "",
                    "name": "",
                    "description": "makeborder($lastname: something);\n",
                    "src": "@example",
                    "paraminfo": {}
                }
            ],
            "id": "test01.scss.8",
            "typeName": "SassDoclet",
            "name": "makeborder",
            "kind": "mixin",
            "filename": "test01.scss",
            "lineno": 63,
            "expectedItemCount": 5,
            "description": "Creates a repeated border from an image\n",
            "prefix": null,
            "raw": [
                "",
                "Creates a repeated border from an image",
                "",
                "@param      $location {String} acceptable values are horizontal or vertical",
                "@param      $color {String|Color} a string or hex/rgba color value to use for the border",
                "@param      $background-image {String} a background image url",
                "",
                "@returns {Style} bordered left content",
                "@example",
                "  makeborder($lastname: something);"
            ],
            "sass": "@function makeborder($location,\n                     $color: transparent,\n                     $background-image: none)\n{\n  @return $color $background-image repeat-x $location;\n}",
            "context": 0
        },
        "9": {
            "buffer": [],
            "items": [
                {
                    "id": 1,
                    "kind": "extends",
                    "type": "",
                    "name": "",
                    "description": "%l-cleared-container",
                    "src": "@extends %l-cleared-container",
                    "paraminfo": {}
                }
            ],
            "id": "test01.scss.9",
            "typeName": "SassDoclet",
            "name": "m-listitem-base",
            "kind": "placeholder",
            "filename": "test01.scss",
            "lineno": 74,
            "expectedItemCount": 1,
            "description": "description for m-listitem-base.\n",
            "prefix": null,
            "raw": [
                "",
                "description for m-listitem-base.",
                "@extends %l-cleared-container"
            ],
            "sass": "%m-listitem-base {\n  @extend %l-cleared-container;\n  width: 100%;\n  h3 {\n    margin: 12px 0px 10px 0px;\n    text-transform: uppercase;\n    font: fontconfig(22px, 400);\n  }\n}",
            "context": 0
        },
        "10": {
            "buffer": [],
            "items": [],
            "id": "test01.scss.10",
            "typeName": "SassDoclet",
            "name": "m-listitem-location",
            "kind": "class",
            "filename": "test01.scss",
            "lineno": 87,
            "expectedItemCount": 0,
            "description": "description poop stuff it does\n",
            "prefix": null,
            "raw": [
                "",
                "description poop stuff it does"
            ],
            "sass": ".m-listitem-location {\n  font: swt-fontconfig(72%, 600);\n  margin-top: 8px;\n}"
        },
        "11": {
            "buffer": [],
            "items": [
                {
                    "id": 1,
                    "kind": "extends",
                    "type": "",
                    "name": "",
                    "description": "%swm-ul-navigation",
                    "src": "@extends %swm-ul-navigation",
                    "paraminfo": {}
                }
            ],
            "id": "test01.scss.11",
            "typeName": "SassDoclet",
            "name": "menu-links",
            "kind": "id",
            "filename": "test01.scss",
            "lineno": 96,
            "expectedItemCount": 1,
            "description": "description poop stuff it does\n",
            "prefix": null,
            "raw": [
                "",
                "description poop stuff it does",
                "@extends %swm-ul-navigation"
            ],
            "sass": "#menu-links {\n  @extend %swm-ul-navigation;\n  position: absolute;\n  bottom:8px;\n  left: 294px;\n}",
            "context": 0
        }
    },
    "typeName": "Worker",
    "context": {
        "data": null,
        "callback": null
    },
    "processingItem": null,
    "queuedCount": 0,
    "currentQueuedCount": 0,
    "queue": {},
    "parser": {
        "buffer": [
            "/**",
            "* Test fixture for sassdocjs tests",
            "* @module fixtures/test01.scss",
            "*/",
            "",
            "/** @var {String} backround image path to sprite file */",
            "$icon-sprite:                           url('/images/sprite.png') no-repeat;",
            "",
            "/** @var {Number} number of sprites to expect in file */",
            "$sprite-count:                          23;",
            "",
            "/** @var {String} default sprite file to use */",
            "$default-sprite:                        $icon-sprite;",
            "",
            "/** @var {Number} with of sprited elements */",
            "$default-sprite-element-width:          $icon-sprite-element-width;",
            "",
            "/** @var {Number} height of sprited elements */",
            "$default-sprite-element-height:         $icon-sprite-element-height;",
            "",
            "/**",
            "* mixin for creating horizontal or vertical list of items",
            "* e.g. floated DIV or LI elemenents for navigation or grouping",
            "*",
            "* @param     $item-position {String} acceptable values are horizontal or vertical",
            "* @param     $style-position {Number} margin to apply to right (horizontal) or bottom (vertical)",
            "* @param     $image-file {Number} optional width",
            "* @param     $sprite-width {Number} optional if supplied this should be the number of total elements",
            "* @param     $sprite-height {Bool} use float vs. inline-block",
            "* @example",
            "*   background: sprite(24px, gray, mapicon);",
            "*   &:hover {",
            "*     background: sprite(24px, orange, mapicon);",
            "*   }",
            "*/",
            "@mixin sprite($item-position: 0,",
            "              $style-position: 0,",
            "              $image-file: $default-sprite,",
            "              $sprite-width:  $default-sprite-element-width,",
            "              $sprite-height: $default-sprite-element-height)",
            "{",
            "  $pos-x: -1 * ($style-position * $sprite-width);",
            "  $pos-y: -1 * ($item-position * $sprite-height);",
            "",
            "  @debug $pos-x;",
            "  @debug $pos-y;",
            "",
            "  background: $image-file $pos-x $pos-y;",
            "",
            "}",
            "",
            "/**",
            "* Creates a repeated border from an image",
            "*",
            "* @param      $location {String} acceptable values are horizontal or vertical",
            "* @param      $color {String|Color} a string or hex/rgba color value to use for the border",
            "* @param      $background-image {String} a background image url",
            "*",
            "* @returns {Style} bordered left content",
            "* @example",
            "*   makeborder($lastname: something);",
            "*/",
            "@function makeborder($location,",
            "                     $color: transparent,",
            "                     $background-image: none)",
            "{",
            "  @return $color $background-image repeat-x $location;",
            "}",
            "",
            "/**",
            "* description for m-listitem-base.",
            "* @extends %l-cleared-container",
            "*/",
            "%m-listitem-base {",
            "  @extend %l-cleared-container;",
            "  width: 100%;",
            "  h3 {",
            "    margin: 12px 0px 10px 0px;",
            "    text-transform: uppercase;",
            "    font: fontconfig(22px, 400);",
            "  }",
            "}",
            "",
            "/**",
            "* description poop stuff it does",
            "*/",
            ".m-listitem-location {",
            "  font: swt-fontconfig(72%, 600);",
            "  margin-top: 8px;",
            "}",
            "",
            "/**",
            "* description poop stuff it does",
            "* @extends %swm-ul-navigation",
            "*/",
            "#menu-links {",
            "  @extend %swm-ul-navigation;",
            "  position: absolute;",
            "  bottom:8px;",
            "  left: 294px;",
            "}"
        ],
        "items": {
            "0": "/**",
            "1": "* Test fixture for sassdocjs tests",
            "2": "* @module fixtures/test01.scss",
            "3": "*/",
            "4": "",
            "5": "/** @var {String} backround image path to sprite file */",
            "6": "$icon-sprite:                           url('/images/sprite.png') no-repeat;",
            "7": "",
            "8": "/** @var {Number} number of sprites to expect in file */",
            "9": "$sprite-count:                          23;",
            "10": "",
            "11": "/** @var {String} default sprite file to use */",
            "12": "$default-sprite:                        $icon-sprite;",
            "13": "",
            "14": "/** @var {Number} with of sprited elements */",
            "15": "$default-sprite-element-width:          $icon-sprite-element-width;",
            "16": "",
            "17": "/** @var {Number} height of sprited elements */",
            "18": "$default-sprite-element-height:         $icon-sprite-element-height;",
            "19": "",
            "20": "/**",
            "21": "* mixin for creating horizontal or vertical list of items",
            "22": "* e.g. floated DIV or LI elemenents for navigation or grouping",
            "23": "*",
            "24": "* @param     $item-position {String} acceptable values are horizontal or vertical",
            "25": "* @param     $style-position {Number} margin to apply to right (horizontal) or bottom (vertical)",
            "26": "* @param     $image-file {Number} optional width",
            "27": "* @param     $sprite-width {Number} optional if supplied this should be the number of total elements",
            "28": "* @param     $sprite-height {Bool} use float vs. inline-block",
            "29": "* @example",
            "30": "*   background: sprite(24px, gray, mapicon);",
            "31": "*   &:hover {",
            "32": "*     background: sprite(24px, orange, mapicon);",
            "33": "*   }",
            "34": "*/",
            "35": "@mixin sprite($item-position: 0,",
            "36": "$style-position: 0,",
            "37": "$image-file: $default-sprite,",
            "38": "$sprite-width:  $default-sprite-element-width,",
            "39": "$sprite-height: $default-sprite-element-height)",
            "40": "{",
            "41": "$pos-x: -1 * ($style-position * $sprite-width);",
            "42": "$pos-y: -1 * ($item-position * $sprite-height);",
            "43": "",
            "44": "@debug $pos-x;",
            "45": "@debug $pos-y;",
            "46": "",
            "47": "background: $image-file $pos-x $pos-y;",
            "48": "",
            "49": "}",
            "50": "",
            "51": "/**",
            "52": "* Creates a repeated border from an image",
            "53": "*",
            "54": "* @param      $location {String} acceptable values are horizontal or vertical",
            "55": "* @param      $color {String|Color} a string or hex/rgba color value to use for the border",
            "56": "* @param      $background-image {String} a background image url",
            "57": "*",
            "58": "* @returns {Style} bordered left content",
            "59": "* @example",
            "60": "*   makeborder($lastname: something);",
            "61": "*/",
            "62": "@function makeborder($location,",
            "63": "$color: transparent,",
            "64": "$background-image: none)",
            "65": "{",
            "66": "@return $color $background-image repeat-x $location;",
            "67": "}",
            "68": "",
            "69": "/**",
            "70": "* description for m-listitem-base.",
            "71": "* @extends %l-cleared-container",
            "72": "*/",
            "73": "%m-listitem-base {",
            "74": "@extend %l-cleared-container;",
            "75": "width: 100%;",
            "76": "h3 {",
            "77": "margin: 12px 0px 10px 0px;",
            "78": "text-transform: uppercase;",
            "79": "font: fontconfig(22px, 400);",
            "80": "}",
            "81": "}",
            "82": "",
            "83": "/**",
            "84": "* description poop stuff it does",
            "85": "*/",
            "86": ".m-listitem-location {",
            "87": "font: swt-fontconfig(72%, 600);",
            "88": "margin-top: 8px;",
            "89": "}",
            "90": "",
            "91": "/**",
            "92": "* description poop stuff it does",
            "93": "* @extends %swm-ul-navigation",
            "94": "*/",
            "95": "#menu-links {",
            "96": "@extend %swm-ul-navigation;",
            "97": "position: absolute;",
            "98": "bottom:8px;",
            "99": "left: 294px;",
            "100": "}"
        },
        "id": "",
        "typeName": "Parser",
        "context": {
            "data": null,
            "callback": null,
            "linecount": 101
        },
        "processingItem": null,
        "queuedCount": 0,
        "currentQueuedCount": 0,
        "queue": {},
        "processingFilename": "/var/folders/ls/l5bfx4590tbckv9mr54lsbbc0000gn/T/_nondest_1550_1390096757171/test01.scss",
        "_events": {}
    },
    "filter": {
        "buffer": [
            "/**",
            "* Test fixture for sassdocjs tests",
            "* @module fixtures/test01.scss",
            "*/",
            "",
            "/** @var {String} backround image path to sprite file */",
            "$icon-sprite:                           url('/images/sprite.png') no-repeat;",
            "",
            "/** @var {Number} number of sprites to expect in file */",
            "$sprite-count:                          23;",
            "",
            "/** @var {String} default sprite file to use */",
            "$default-sprite:                        $icon-sprite;",
            "",
            "/** @var {Number} with of sprited elements */",
            "$default-sprite-element-width:          $icon-sprite-element-width;",
            "",
            "/** @var {Number} height of sprited elements */",
            "$default-sprite-element-height:         $icon-sprite-element-height;",
            "",
            "/**",
            "* mixin for creating horizontal or vertical list of items",
            "* e.g. floated DIV or LI elemenents for navigation or grouping",
            "*",
            "* @param     $item-position {String} acceptable values are horizontal or vertical",
            "* @param     $style-position {Number} margin to apply to right (horizontal) or bottom (vertical)",
            "* @param     $image-file {Number} optional width",
            "* @param     $sprite-width {Number} optional if supplied this should be the number of total elements",
            "* @param     $sprite-height {Bool} use float vs. inline-block",
            "* @example",
            "*   background: sprite(24px, gray, mapicon);",
            "*   &:hover {",
            "*     background: sprite(24px, orange, mapicon);",
            "*   }",
            "*/",
            "@mixin sprite($item-position: 0,",
            "              $style-position: 0,",
            "              $image-file: $default-sprite,",
            "              $sprite-width:  $default-sprite-element-width,",
            "              $sprite-height: $default-sprite-element-height)",
            "{",
            "  $pos-x: -1 * ($style-position * $sprite-width);",
            "  $pos-y: -1 * ($item-position * $sprite-height);",
            "",
            "  @debug $pos-x;",
            "  @debug $pos-y;",
            "",
            "  background: $image-file $pos-x $pos-y;",
            "",
            "}",
            "",
            "/**",
            "* Creates a repeated border from an image",
            "*",
            "* @param      $location {String} acceptable values are horizontal or vertical",
            "* @param      $color {String|Color} a string or hex/rgba color value to use for the border",
            "* @param      $background-image {String} a background image url",
            "*",
            "* @returns {Style} bordered left content",
            "* @example",
            "*   makeborder($lastname: something);",
            "*/",
            "@function makeborder($location,",
            "                     $color: transparent,",
            "                     $background-image: none)",
            "{",
            "  @return $color $background-image repeat-x $location;",
            "}",
            "",
            "/**",
            "* description for m-listitem-base.",
            "* @extends %l-cleared-container",
            "*/",
            "%m-listitem-base {",
            "  @extend %l-cleared-container;",
            "  width: 100%;",
            "  h3 {",
            "    margin: 12px 0px 10px 0px;",
            "    text-transform: uppercase;",
            "    font: fontconfig(22px, 400);",
            "  }",
            "}",
            "",
            "/**",
            "* description poop stuff it does",
            "*/",
            ".m-listitem-location {",
            "  font: swt-fontconfig(72%, 600);",
            "  margin-top: 8px;",
            "}",
            "",
            "/**",
            "* description poop stuff it does",
            "* @extends %swm-ul-navigation",
            "*/",
            "#menu-links {",
            "  @extend %swm-ul-navigation;",
            "  position: absolute;",
            "  bottom:8px;",
            "  left: 294px;",
            "}"
        ],
        "items": {},
        "id": "",
        "typeName": "Filter",
        "context": {
            "data": null,
            "callback": null
        },
        "processingItem": null,
        "queuedCount": 0,
        "currentQueuedCount": 0,
        "queue": {},
        "processingBlock": {
            "_id": "test01.scss.11",
            "_filename": "test01.scss",
            "_lineno": 96,
            "_prefix": null,
            "_description": "description poop stuff it does\n",
            "_kind": "id",
            "_itemcount": 1,
            "_items": [
                {
                    "id": 1,
                    "kind": "extends",
                    "type": "",
                    "name": "",
                    "description": "%swm-ul-navigation",
                    "src": "@extends %swm-ul-navigation",
                    "paraminfo": {}
                }
            ],
            "_sass": [
                "#menu-links {",
                "  @extend %swm-ul-navigation;",
                "  position: absolute;",
                "  bottom:8px;",
                "  left: 294px;",
                "}"
            ],
            "_raw": {
                "filename": "test01.scss",
                "lineno": 96,
                "data": [
                    "",
                    "description poop stuff it does",
                    "@extends %swm-ul-navigation"
                ]
            },
            "_name": "menu-links"
        },
        "processingLine": "%swm-ul-navigation",
        "_events": {}
    },
    "maker": {
        "buffer": [],
        "items": {},
        "id": "",
        "typeName": "Maker",
        "context": {
            "data": null,
            "callback": null
        },
        "processingItem": null,
        "queuedCount": 0,
        "currentQueuedCount": 0,
        "queue": {},
        "_events": {}
    },
    "_async": {},
    "sassdocCount": 11,
    "filteredComments": 19,
    "parsedComments": 11,
    "_events": {},
    "filename": "/var/folders/ls/l5bfx4590tbckv9mr54lsbbc0000gn/T/_nondest_1550_1390096757171/test01.scss"
}