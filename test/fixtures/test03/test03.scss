/**
* Test fixture for sassdocjs tests
* @module fixtures/test03.scss
*/

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
// Background RGBA
// Creates a cross-browser rgba background color.
// ---------------------------------------------------------
@mixin background-rgba($red: 0, $green: 0, $blue: 0, $alpha: 1.0) {
  background-color: rgb($red, $green, $blue);
  background-color: rgba($red, $green, $blue, $alpha);

  @if ($legacy-support-for-ie) {
    @include has-layout;
    background-color: transparent\9;
    $color: rgba($red, $green, $blue, $alpha);
    @include filter-gradient($color, $color);
  }
}

/* ==|=======================================================================
   base.extensions
   ========================================================================== */
$number-to-hex-hexes: 0 1 2 3 4 5 6 7 8 9 A B C D E F;

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function number-to-hex($number, $width: 2) {
  $s: nth($number-to-hex-hexes, ($number % 16) + 1);
  @if $width > 1 {
    @return number-to-hex(floor($number / 16), $width - 1) + "#{$s}";
  } @else {
    @return "#{$s}";
  }
}




/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@mixin at-size($size) {
  @media only screen and (max-width: $size) { @content; }
}



/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function evenfill($direction, $numitems, $baseline: 0) {
  @return (100-$baseline)/$numitems;

}

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function contains($list,$var) {
  @return (false == index($list, $var));
}

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function pxToEm($target, $context){
  @return ($target/$context)+0em;
}

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function emToPx($val, $base: 16px){
  $tmp: strip-units($val);
  @return ($tmp*$base)+0px;
}

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function emp($emval, $base: 16px) {
  @if (unitless($emval)) {
    $emval: $emval * 1em;
  }


  @return $pxval / $base * 1px;
}

/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}
/*
   properties necessary for responsive images
   @usage:
   @extend %m-image-responsive;
   ---------------------------------------------------------- */
@function em($target, $base: 16) {
  @return ($target/$base) * 1em;
}











